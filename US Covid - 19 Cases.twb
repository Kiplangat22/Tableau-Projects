<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='us-counties' inline='true' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='us-counties' name='textscan.0l09f0d13zlg8n19mkhr20h6ocm9'>
            <connection class='textscan' directory='C:/Users/Calvin/Desktop/TableauData/TableauGithub' filename='us-counties.csv' password='' server='' />
          </named-connection>
          <named-connection caption='us-counties-2020' name='textscan.08duxra1uiug3q1etvxhl04scjmd'>
            <connection class='textscan' directory='C:/Users/Calvin/Desktop/TableauData/TableauGithub' filename='us-counties-2020.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation all='true' name='us-counties-2020.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_KE' separator=','>
            <column datatype='date' name='date' />
            <column datatype='string' name='county' />
            <column datatype='string' name='state' />
            <column datatype='integer' name='fips' />
            <column datatype='integer' name='cases' />
            <column datatype='integer' name='deaths' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.08duxra1uiug3q1etvxhl04scjmd' name='us-counties-2020.csv' table='[us-counties-2020#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_KE' separator=','>
              <column datatype='date' name='date' ordinal='0' />
              <column datatype='string' name='county' ordinal='1' />
              <column datatype='string' name='state' ordinal='2' />
              <column datatype='integer' name='fips' ordinal='3' />
              <column datatype='integer' name='cases' ordinal='4' />
              <column datatype='integer' name='deaths' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.08duxra1uiug3q1etvxhl04scjmd' name='us-counties-2021.csv' table='[us-counties-2021#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_KE' separator=','>
              <column datatype='date' name='date' ordinal='0' />
              <column datatype='string' name='county' ordinal='1' />
              <column datatype='string' name='state' ordinal='2' />
              <column datatype='integer' name='fips' ordinal='3' />
              <column datatype='integer' name='cases' ordinal='4' />
              <column datatype='integer' name='deaths' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.08duxra1uiug3q1etvxhl04scjmd' name='us-counties-2022.csv' table='[us-counties-2022#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_KE' separator=','>
              <column datatype='date' name='date' ordinal='0' />
              <column datatype='string' name='county' ordinal='1' />
              <column datatype='string' name='state' ordinal='2' />
              <column datatype='integer' name='fips' ordinal='3' />
              <column datatype='integer' name='cases' ordinal='4' />
              <column datatype='integer' name='deaths' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.08duxra1uiug3q1etvxhl04scjmd' name='us-counties-2023.csv' table='[us-counties-2023#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_KE' separator=','>
              <column datatype='date' name='date' ordinal='0' />
              <column datatype='string' name='county' ordinal='1' />
              <column datatype='string' name='state' ordinal='2' />
              <column datatype='integer' name='fips' ordinal='3' />
              <column datatype='integer' name='cases' ordinal='4' />
              <column datatype='integer' name='deaths' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[us-counties-2020.csv_543EE711B3604100A96FEA0BC0CE0847]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[us-counties-2020.csv_543EE711B3604100A96FEA0BC0CE0847]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[us-counties-2020.csv_543EE711B3604100A96FEA0BC0CE0847]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[us-counties-2020.csv_543EE711B3604100A96FEA0BC0CE0847]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[us-counties-2020.csv_543EE711B3604100A96FEA0BC0CE0847]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[us-counties-2020.csv_543EE711B3604100A96FEA0BC0CE0847]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[us-counties-2020.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[us-counties-2020.csv_543EE711B3604100A96FEA0BC0CE0847]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='%Diff Cases' datatype='real' name='[Calculation_242912945258958848]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_242912945260703746]/SUM([cases])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New Positive  cases 2' datatype='integer' name='[Calculation_242912945260703746]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([cases]) - LOOKUP(SUM([cases]),-1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New Deaths' datatype='integer' name='[Calculation_242912945304870915]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([deaths])- LOOKUP(SUM([deaths]),-1) &gt; 0 &#13;&#10;THEN&#13;&#10;SUM([deaths])- LOOKUP(SUM([deaths]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New Deaths 2' datatype='integer' name='[Calculation_242912945305100292]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([deaths]) - LOOKUP(SUM([deaths]),-1)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='%Change positive Cases' datatype='real' name='[Calculation_242912945305227269]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_242912945260703746]/SUM([cases])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% Change Deaths' datatype='real' name='[Calculation_242912945305415686]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_242912945305100292]/SUM([deaths])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New positive Cases' datatype='integer' name='[Calculation_428967904741691392]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([cases])- LOOKUP(SUM([cases]),-1) &gt; 0 &#13;&#10;THEN&#13;&#10;SUM([cases])- LOOKUP(SUM([cases]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New death cases' datatype='integer' name='[Calculation_428967904744448001]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF SUM([deaths])- LOOKUP(SUM([deaths]),-1) &gt; 0 THEN&#13;&#10;SUM([deaths])- LOOKUP(SUM([deaths]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Date(advanced)' datatype='string' name='[Calculation_428967904828571650]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(YEAR([date]))+ &quot;-&quot; + RIGHT(&quot;0&quot; + STR(MONTH([date])),2)' />
      </column>
      <column caption='Total cases' datatype='integer' name='[Calculation_733242354659315712]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([cases])' />
      </column>
      <column caption='New cases' datatype='real' hidden='true' name='[Calculation_733242354660065281]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_733242354659315712] &gt; LOOKUP(([Calculation_733242354659315712]),-1) &gt; 0&#13;&#10;THEN  [Calculation_733242354659315712] &gt; LOOKUP([Calculation_733242354659315712],-1)&#13;&#10;END' />
      </column>
      <column caption='New Positive  cases 2 (copy)' datatype='integer' name='[New Positive  cases 2 (copy)_132011804673286144]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([cases]) - LOOKUP(SUM([cases]))'>
          <table-calc ordering-field='' ordering-type='Field' tc-options='Fixed'>
            <address />
          </table-calc>
        </calculation>
      </column>
      <column caption='us-counties-2020.csv' datatype='table' name='[__tableau_internal_object_id__].[us-counties-2020.csv_543EE711B3604100A96FEA0BC0CE0847]' role='measure' type='quantitative' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='integer' name='[fips]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (County)' hidden='true' name='[Action (County)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county]' />
        </groupfilter>
      </group>
      <group caption='Action (County,State)' hidden='true' name='[Action (County,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[county]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),MONTH(Date))' hidden='true' name='[Action (YEAR(Date),MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:date:ok]' />
          <groupfilter function='level-members' level='[mn:date:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='county' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='fips' />
        <field-sort-custom-order field='cases' />
        <field-sort-custom-order field='Calculation_733242354659315712' />
        <field-sort-custom-order field='deaths' />
        <field-sort-custom-order field='Table Name' />
        <field-sort-custom-order field='Calculation_428967904828571650' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='us-counties-2020.csv' id='us-counties-2020.csv_543EE711B3604100A96FEA0BC0CE0847'>
            <properties context=''>
              <relation all='true' name='us-counties-2020.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_KE' separator=','>
                  <column datatype='date' name='date' />
                  <column datatype='string' name='county' />
                  <column datatype='string' name='state' />
                  <column datatype='integer' name='fips' />
                  <column datatype='integer' name='cases' />
                  <column datatype='integer' name='deaths' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.08duxra1uiug3q1etvxhl04scjmd' name='us-counties-2020.csv' table='[us-counties-2020#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_KE' separator=','>
                    <column datatype='date' name='date' ordinal='0' />
                    <column datatype='string' name='county' ordinal='1' />
                    <column datatype='string' name='state' ordinal='2' />
                    <column datatype='integer' name='fips' ordinal='3' />
                    <column datatype='integer' name='cases' ordinal='4' />
                    <column datatype='integer' name='deaths' ordinal='5' />
                  </columns>
                </relation>
                <relation connection='textscan.08duxra1uiug3q1etvxhl04scjmd' name='us-counties-2021.csv' table='[us-counties-2021#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_KE' separator=','>
                    <column datatype='date' name='date' ordinal='0' />
                    <column datatype='string' name='county' ordinal='1' />
                    <column datatype='string' name='state' ordinal='2' />
                    <column datatype='integer' name='fips' ordinal='3' />
                    <column datatype='integer' name='cases' ordinal='4' />
                    <column datatype='integer' name='deaths' ordinal='5' />
                  </columns>
                </relation>
                <relation connection='textscan.08duxra1uiug3q1etvxhl04scjmd' name='us-counties-2022.csv' table='[us-counties-2022#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_KE' separator=','>
                    <column datatype='date' name='date' ordinal='0' />
                    <column datatype='string' name='county' ordinal='1' />
                    <column datatype='string' name='state' ordinal='2' />
                    <column datatype='integer' name='fips' ordinal='3' />
                    <column datatype='integer' name='cases' ordinal='4' />
                    <column datatype='integer' name='deaths' ordinal='5' />
                  </columns>
                </relation>
                <relation connection='textscan.08duxra1uiug3q1etvxhl04scjmd' name='us-counties-2023.csv' table='[us-counties-2023#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_KE' separator=','>
                    <column datatype='date' name='date' ordinal='0' />
                    <column datatype='string' name='county' ordinal='1' />
                    <column datatype='string' name='state' ordinal='2' />
                    <column datatype='integer' name='fips' ordinal='3' />
                    <column datatype='integer' name='cases' ordinal='4' />
                    <column datatype='integer' name='deaths' ordinal='5' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_40BDB9E65C844E3FA949DC7130C58D69]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Us Covid-19 dashboard' type='sheet' worksheet='Distribution by State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Us Covid-19 dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_DCA5C57163D843ADABAD70A34263FD14]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Us Covid-19 dashboard' type='sheet' worksheet='Deaths per month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Us Covid-19 dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_AC9E4A292386465A9DA9D047A655E25D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Us Covid-19 dashboard' type='sheet' worksheet='Cases per month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Us Covid-19 dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_D2491BFAA2FE419683BC4DB59862BBDE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Us Covid-19 dashboard' type='sheet' worksheet='Distribution by county' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Us Covid-19 dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cases per month'>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='New positive Cases' datatype='integer' name='[Calculation_428967904741691392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([cases])- LOOKUP(SUM([cases]),-1) &gt; 0 &#13;&#10;THEN&#13;&#10;SUM([cases])- LOOKUP(SUM([cases]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_428967904741691392]' derivation='User' name='[usr:Calculation_428967904741691392:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (County)]'>
            <groupfilter function='level-members' level='[county]' user:ui-action-filter='[Action4_D2491BFAA2FE419683BC4DB59862BBDE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_40BDB9E65C844E3FA949DC7130C58D69]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1_40BDB9E65C844E3FA949DC7130C58D69]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (County,State)]</column>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (State)]</column>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (County)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:5]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:5]</cols>
        <pages>
          <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{14422140-9802-4316-8710-6A49F604C535}' />
    </worksheet>
    <worksheet name='Data check'>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column-instance column='[__tableau_internal_object_id__].[us-counties-2020.csv_543EE711B3604100A96FEA0BC0CE0847]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:us-counties-2020.csv_543EE711B3604100A96FEA0BC0CE0847:qk]' pivot='key' type='quantitative' />
            <column caption='us-counties-2020.csv' datatype='table' name='[__tableau_internal_object_id__].[us-counties-2020.csv_543EE711B3604100A96FEA0BC0CE0847]' role='measure' type='quantitative' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column-instance column='[cases]' derivation='CountD' name='[ctd:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[ctd:cases:qk]' />
              <text column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[__tableau_internal_object_id__].[cnt:us-counties-2020.csv_543EE711B3604100A96FEA0BC0CE0847:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B9BD8C8E-AE45-4445-AB00-28ABCBBFC1C0}' />
    </worksheet>
    <worksheet name='Deaths per month'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; - &lt;Page Name&gt;&#10;&lt;</run>
            <run>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_242912945305415686:qk:1]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='New Deaths' datatype='integer' name='[Calculation_242912945304870915]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([deaths])- LOOKUP(SUM([deaths]),-1) &gt; 0 &#13;&#10;THEN&#13;&#10;SUM([deaths])- LOOKUP(SUM([deaths]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Deaths 2' datatype='integer' name='[Calculation_242912945305100292]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths]) - LOOKUP(SUM([deaths]),-1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='% Change Deaths' datatype='real' name='[Calculation_242912945305415686]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_242912945305100292]/SUM([deaths])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New positive Cases' datatype='integer' name='[Calculation_428967904741691392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([cases])- LOOKUP(SUM([cases]),-1) &gt; 0 &#13;&#10;THEN&#13;&#10;SUM([cases])- LOOKUP(SUM([cases]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_242912945304870915]' derivation='User' name='[usr:Calculation_242912945304870915:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_242912945305415686]' derivation='User' name='[usr:Calculation_242912945305415686:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Calculation_242912945305100292]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_428967904741691392]' derivation='User' name='[usr:Calculation_428967904741691392:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (County)]'>
            <groupfilter function='level-members' level='[county]' user:ui-action-filter='[Action4_D2491BFAA2FE419683BC4DB59862BBDE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (County,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_40BDB9E65C844E3FA949DC7130C58D69]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[county]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1_40BDB9E65C844E3FA949DC7130C58D69]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_22B1DF7E46814D089757BAA714AF01AE]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (YEAR(Date),MONTH(Date))]</column>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (County,State)]</column>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (State)]</column>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (County)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:5]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_242912945305415686:qk:1]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <tooltip column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_242912945304870915:qk:1]' />
              <tooltip column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_242912945305415686:qk:1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:5]</cols>
        <pages>
          <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{3FE2C51B-13D2-45E9-B85D-55A4F89D8D7E}' />
    </worksheet>
    <worksheet name='Distribution by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='New positive Cases' datatype='integer' name='[Calculation_428967904741691392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([cases])- LOOKUP(SUM([cases]),-1) &gt; 0 &#13;&#10;THEN&#13;&#10;SUM([cases])- LOOKUP(SUM([cases]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Total cases' datatype='integer' name='[Calculation_733242354659315712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([cases])' />
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_428967904741691392]' derivation='User' name='[usr:Calculation_428967904741691392:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_733242354659315712]' derivation='User' name='[usr:Calculation_733242354659315712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (County)]'>
            <groupfilter function='level-members' level='[county]' user:ui-action-filter='[Action4_D2491BFAA2FE419683BC4DB59862BBDE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action2_8E7B3F23BB934F8ABD48241D094B2808]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_22B1DF7E46814D089757BAA714AF01AE]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]</column>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (MONTH(Date))]</column>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (YEAR(Date),MONTH(Date))]</column>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (County)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Longitude (generated)]' field-type='quantitative' max='31936922.598444559' min='24280597.683388446' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Latitude (generated)]' field-type='quantitative' max='7971562.0829815548' min='1512131.6505403894' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354659315712:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#55aaff</color>
                <color>#6eb3f8</color>
                <color>#86bcf2</color>
                <color>#9dc4ec</color>
                <color>#b2cce5</color>
                <color>#c6d2df</color>
                <color>#d9d9d9</color>
                <color>#dfc1ba</color>
                <color>#e5a999</color>
                <color>#ec8e76</color>
                <color>#f27252</color>
                <color>#f8542b</color>
                <color>#ff3502</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='admin-0-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute' value='false' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.019999999552965164' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354659315712:qk]' />
              <size column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]' />
              <lod column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]' />
              <lod column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>County:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354659315712:qk]>]]></run>
                <run><![CDATA[
New Positive cases: <[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:2]> 
]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.9060773849487305' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Latitude (generated)]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{20152AC5-767C-4A7C-8718-4CF659D508A7}' />
    </worksheet>
    <worksheet name='Distribution by county'>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='New positive Cases' datatype='integer' name='[Calculation_428967904741691392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([cases])- LOOKUP(SUM([cases]),-1) &gt; 0 &#13;&#10;THEN&#13;&#10;SUM([cases])- LOOKUP(SUM([cases]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Total cases' datatype='integer' name='[Calculation_733242354659315712]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([cases])' />
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_428967904741691392]' derivation='User' name='[usr:Calculation_428967904741691392:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_733242354659315712]' derivation='User' name='[usr:Calculation_733242354659315712:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action2_8E7B3F23BB934F8ABD48241D094B2808]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1_40BDB9E65C844E3FA949DC7130C58D69]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (YEAR(Date),MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_22B1DF7E46814D089757BAA714AF01AE]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:date:ok]' />
              <groupfilter function='level-members' level='[mn:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]</column>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (MONTH(Date))]</column>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (YEAR(Date),MONTH(Date))]</column>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Longitude (generated)]' field-type='quantitative' max='42230274.433192581' min='10686853.644919168' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Latitude (generated)]' field-type='quantitative' max='16534316.086711362' min='-10077999.148551514' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354659315712:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#00aa00</color>
                <color>#1db11d</color>
                <color>#3db93d</color>
                <color>#60c160</color>
                <color>#86c986</color>
                <color>#aed1ae</color>
                <color>#d9d9d9</color>
                <color>#dfcecb</color>
                <color>#e5c2bb</color>
                <color>#ecb6ab</color>
                <color>#f2a89a</color>
                <color>#f89a87</color>
                <color>#ff8b74</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='admin-0-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute' value='false' />
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.019999999552965164' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354659315712:qk]' />
              <size column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]' />
              <lod column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:county:nk]' />
              <lod column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>County:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:county:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total cases:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354659315712:qk]>]]></run>
                <run><![CDATA[
New Positive cases: <[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:2]> 
]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.9060773849487305' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Latitude (generated)]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FBD87F32-4B81-424E-9675-A0922684E23B}' />
    </worksheet>
    <worksheet name='New death cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='New Deaths' datatype='integer' name='[Calculation_242912945304870915]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([deaths])- LOOKUP(SUM([deaths]),-1) &gt; 0 &#13;&#10;THEN&#13;&#10;SUM([deaths])- LOOKUP(SUM([deaths]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Deaths 2' datatype='integer' name='[Calculation_242912945305100292]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([deaths]) - LOOKUP(SUM([deaths]),-1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='% Change Deaths' datatype='real' name='[Calculation_242912945305415686]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_242912945305100292]/SUM([deaths])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_242912945304870915]' derivation='User' name='[usr:Calculation_242912945304870915:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_242912945305415686]' derivation='User' name='[usr:Calculation_242912945305415686:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Calculation_242912945305100292]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_242912945305415686:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_242912945304870915:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_242912945304870915:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_242912945305415686:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_242912945305415686:qk:1]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]</cols>
        <pages>
          <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{C821E4C7-5CB9-4F00-8C8B-5D66D60B7487}' />
    </worksheet>
    <worksheet name='New positive cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='New positive Cases' datatype='integer' name='[Calculation_428967904741691392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([cases])- LOOKUP(SUM([cases]),-1) &gt; 0 &#13;&#10;THEN&#13;&#10;SUM([cases])- LOOKUP(SUM([cases]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date(advanced)' datatype='string' name='[Calculation_428967904828571650]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([date]))+ &quot;-&quot; + RIGHT(&quot;0&quot; + STR(MONTH([date])),2)' />
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_428967904828571650]' derivation='None' name='[none:Calculation_428967904828571650:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_428967904741691392]' derivation='User' name='[usr:Calculation_428967904741691392:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:Calculation_428967904828571650:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2023-01&quot;</bucket>
              <bucket>&quot;2022-12&quot;</bucket>
              <bucket>&quot;2021-11&quot;</bucket>
              <bucket>&quot;2022-07&quot;</bucket>
              <bucket>&quot;2022-02&quot;</bucket>
              <bucket>&quot;2021-10&quot;</bucket>
              <bucket>&quot;2021-09&quot;</bucket>
              <bucket>&quot;2021-12&quot;</bucket>
              <bucket>&quot;2020-12&quot;</bucket>
              <bucket>&quot;2022-03&quot;</bucket>
              <bucket>&quot;2021-03&quot;</bucket>
              <bucket>&quot;2021-05&quot;</bucket>
              <bucket>&quot;2022-06&quot;</bucket>
              <bucket>&quot;2020-10&quot;</bucket>
              <bucket>&quot;2022-10&quot;</bucket>
              <bucket>&quot;2021-08&quot;</bucket>
              <bucket>&quot;2020-06&quot;</bucket>
              <bucket>&quot;2022-08&quot;</bucket>
              <bucket>&quot;2023-03&quot;</bucket>
              <bucket>&quot;2021-04&quot;</bucket>
              <bucket>&quot;2021-02&quot;</bucket>
              <bucket>&quot;2020-01&quot;</bucket>
              <bucket>&quot;2020-02&quot;</bucket>
              <bucket>&quot;2020-07&quot;</bucket>
              <bucket>&quot;2020-11&quot;</bucket>
              <bucket>&quot;2020-03&quot;</bucket>
              <bucket>&quot;2020-04&quot;</bucket>
              <bucket>&quot;2020-05&quot;</bucket>
              <bucket>&quot;2020-08&quot;</bucket>
              <bucket>&quot;2020-09&quot;</bucket>
              <bucket>&quot;2021-01&quot;</bucket>
              <bucket>&quot;2022-09&quot;</bucket>
              <bucket>&quot;2021-07&quot;</bucket>
              <bucket>&quot;2021-06&quot;</bucket>
              <bucket>&quot;2022-01&quot;</bucket>
              <bucket>&quot;2022-04&quot;</bucket>
              <bucket>&quot;2022-05&quot;</bucket>
              <bucket>&quot;2023-02&quot;</bucket>
              <bucket>&quot;2022-11&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:Calculation_428967904828571650:nk]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:5]</cols>
      </table>
      <simple-id uuid='{32CFD06C-8813-4779-9849-DAC3847E8A15}' />
    </worksheet>
    <worksheet name='Positive cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='%Diff Cases' datatype='real' name='[Calculation_242912945258958848]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_242912945260703746]/SUM([cases])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Positive  cases 2' datatype='integer' name='[Calculation_242912945260703746]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cases]) - LOOKUP(SUM([cases]),-1)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New positive Cases' datatype='integer' name='[Calculation_428967904741691392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([cases])- LOOKUP(SUM([cases]),-1) &gt; 0 &#13;&#10;THEN&#13;&#10;SUM([cases])- LOOKUP(SUM([cases]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_242912945258958848]' derivation='User' name='[usr:Calculation_242912945258958848:qk:11]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Calculation_242912945260703746]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_428967904741691392]' derivation='User' name='[usr:Calculation_428967904741691392:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_242912945258958848:qk:11]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:5]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:5]&quot;</bucket>
              <bucket>&quot;[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_242912945258958848:qk:11]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]' value='141' />
            <format attr='text-format' field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_242912945258958848:qk:11]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[mn:date:ok]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{6A585161-8AE5-4B90-AB43-4203547A38A1}' />
    </worksheet>
    <worksheet name='States'>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='New positive Cases' datatype='integer' name='[Calculation_428967904741691392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF SUM([cases])- LOOKUP(SUM([cases]),-1) &gt; 0 &#13;&#10;THEN&#13;&#10;SUM([cases])- LOOKUP(SUM([cases]),-1)&#13;&#10;ELSE&#13;&#10;0&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_428967904741691392]' derivation='User' name='[usr:Calculation_428967904741691392:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Pennsylvania&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Arkansas&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Kansas&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;Michigan&quot;</bucket>
              <bucket>&quot;Kentucky&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;Tennessee&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>&quot;Idaho&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;Hawaii&quot;</bucket>
              <bucket>&quot;Montana&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;Virgin Islands&quot;</bucket>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;District of Columbia&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;Alaska&quot;</bucket>
              <bucket>&quot;North Dakota&quot;</bucket>
              <bucket>&quot;West Virginia&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;Minnesota&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]</rows>
        <cols>[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_428967904741691392:qk:5]</cols>
      </table>
      <simple-id uuid='{92869B59-524F-4328-9E7C-CCF196236F5E}' />
    </worksheet>
    <worksheet name='Total cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
          </datasources>
          <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CDA97813-A26A-4F03-9BC0-687592231DE6}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Us Covid-19 dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='us-counties' name='federated.1bw9eio1ok0dq51gmm20z0czpr9e' />
      </datasources>
      <datasource-dependencies datasource='federated.1bw9eio1ok0dq51gmm20z0czpr9e'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='7' param='horz' type-v2='layout-flow' w='84300' x='800' y='50000'>
            <zone h='49000' id='5' type-v2='layout-basic' w='84300' x='800' y='50000'>
              <zone h='49000' id='9' name='Distribution by State' w='42150' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='19' name='Distribution by county' w='42150' x='42950' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='43125' id='16' name='Deaths per month' w='35100' x='50000' y='6875'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='43125' id='27' name='Cases per month' w='49200' x='800' y='6875'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='92125' id='29' param='vert' type-v2='layout-flow' w='14100' x='85100' y='6875'>
            <zone fixed-size='191' h='24875' id='10' is-fixed='true' name='Distribution by State' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]' type-v2='filter' values='cascading' w='14100' x='85100' y='6875'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='106' h='14250' id='28' is-fixed='true' name='Cases per month' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]' type-v2='filter' values='database' w='14100' x='85100' y='31750'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone count='1' h='13750' id='17' name='Deaths per month' name1='Cases per month' synchronized='1' type-v2='currpage' w='14100' x='85100' y='46000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='161' h='21125' id='11' is-fixed='true' name='Distribution by State' pane-specification-id='0' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]' type-v2='size' w='14100' x='85100' y='59750'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='6500' id='13' name='Distribution by State' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]' type-v2='highlighter' w='14100' x='85100' y='80875'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='8125' id='12' name='Distribution by State' pane-specification-id='0' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354659315712:qk]' type-v2='color' w='14100' x='85100' y='87375'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone forceUpdate='true' h='5875' id='21' type-v2='text' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='24'>US COVID-19 CASES</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='30' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='5875' id='21' type-v2='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='24'>US COVID-19 CASES</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='106' h='14250' id='28' mode='checkdropdown' name='Cases per month' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]' type-v2='filter' values='database' w='14100' x='85100' y='31750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43125' id='27' is-fixed='true' name='Cases per month' w='49200' x='800' y='6875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43125' id='16' is-fixed='true' name='Deaths per month' w='35100' x='50000' y='6875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='191' h='24875' id='10' mode='checkdropdown' name='Distribution by State' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]' type-v2='filter' values='cascading' w='14100' x='85100' y='6875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='13' name='Distribution by State' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]' type-v2='highlighter' w='14100' x='85100' y='80875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Distribution by State' w='42150' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='161' h='21125' id='11' name='Distribution by State' pane-specification-id='0' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]' type-v2='size' w='14100' x='85100' y='59750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='12' name='Distribution by State' pane-specification-id='0' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354659315712:qk]' type-v2='color' w='14100' x='85100' y='87375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='19' is-fixed='true' name='Distribution by county' w='42150' x='42950' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='1' h='13750' id='17' name='Deaths per month' name1='Cases per month' synchronized='1' type-v2='currpage' w='14100' x='85100' y='46000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C0E5820E-2AAC-410A-8AF1-8BD1AE890E34}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Data check'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0853E363-4DB3-4FFB-8437-EE05A5E8FDD4}' />
    </window>
    <window class='worksheet' name='Total cases'>
      <cards>
        <edge name='left'>
          <strip size='232'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CBB3CE07-FAC6-4DFF-8F2C-B6807BF9F93D}' />
    </window>
    <window class='worksheet' name='Positive cases'>
      <cards>
        <edge name='left'>
          <strip size='124'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[yr:date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{85936314-5DF2-40D1-9A12-5989EFE6D6D2}' />
    </window>
    <window class='worksheet' name='New positive cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{057F9F23-1F6E-490D-BF55-E7D870DA1F29}' />
    </window>
    <window class='worksheet' name='Cases per month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2022</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{7251ADDC-8C82-4AC9-9509-ACC20C61AE79}' />
    </window>
    <window class='worksheet' name='New death cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A8B2B163-F890-4B5C-9309-C64379DF9A49}' />
    </window>
    <window class='worksheet' name='Deaths per month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{FA8D532B-90C6-47DB-B323-9B9DA4F31150}' />
    </window>
    <window class='worksheet' name='States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DB104A86-ED49-4CA6-8944-620397285FBA}' />
    </window>
    <window class='worksheet' name='Distribution by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354659315712:qk]' type='color' />
            <card param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E0A29544-E490-409D-A016-4CF72D4D5DA4}' />
    </window>
    <window class='worksheet' name='Distribution by county'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[sum:cases:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[usr:Calculation_733242354659315712:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{758E66AA-6248-484A-8735-214FB527357A}' />
    </window>
    <window class='dashboard' maximized='true' name='Us Covid-19 dashboard'>
      <viewpoints>
        <viewpoint name='Cases per month'>
          <current-page>
            <multibucket>
              <bucket>2022</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Deaths per month'>
          <current-page>
            <multibucket>
              <bucket>2022</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='Distribution by State'>
          <zoom type='entire-view' />
          <highlight field='[federated.1bw9eio1ok0dq51gmm20z0czpr9e].[none:state:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Distribution by county'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='19' />
      <simple-id uuid='{7B36D4FF-48D7-435E-B98C-EBFC46DE765D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cases per month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deaths per month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Distribution by State' width='192'>
      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
      AmGN5qTx/wEJgkBKK29vIgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Distribution by county' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New death cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='New positive cases' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Positive cases' width='192'>
      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
      gqVCmvxokAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='States' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dSYxkSZrXf2/xfQn38Ijw2CMyttwra68upruZgREnhgvc5syJA0ICxLFP
      CAkhQCCExBENi4SQ0MAMMz3dTW9ZU3vlGhlrxub7vvtbjUNkZlUu3ZMVnlnuHm6/Q2bI/T1z
      ++y9//vMvs+emSKEEEgkI4ra7wpIJP1ECkAy0kgBSEYaKQDJSCMFIBlppAAkI40UgGSkkQKQ
      jDRSAJKRZqQFIISg10S4EALXdftehuu6PdvyKsoYlDZ92fNHWgCv6oL3erEAHMfp6/nw6kQ0
      CA+El20PvadfGRBsy6RrmKBohIJ+FEXpd5UkQ8K58ACdeomP/9+P+WrnmN6fg5JR4lx4gEhi
      hourFwiubnBw5y+5tZ3hxgfv061V8YYiqPUUX+zl+eGHb3Hz5le88b3fYW0u0e9qSwaAc+EB
      vkmp3ODS1cuEgmHoVBCqTtPSWJyK0OhqXFxfpFoq9buakgHh3AhgfHaJkAbX33oTo9PBpzrM
      X/mAibCPmWSCyNQSMxMRHNthYWGu39WVDAjKKL8Q4zgOiqKgqmd/DjyOeuj62XuTQghs28bj
      8Zy5DMuy0HW9pwCAbduoqtpTezyOvmiaduYyXkWbWpb1Uu15bjyARHIWzsUguBf+6Md3qLWM
      M58vhEAAag9PXiFACLdnT6SoKr0EgF3XRVGUnrzI4w5Fr2UIIXpuj5c5fygE0G1WuHt/h/m1
      K0yPhwGolYr4ImNoqkKrnCHdgCurC7+xDMu00L2e526QX985IlNuvcbaSwaZwReAEOztPuTy
      jTfRcdi5exvP+CxKo0BYVWh2uux8+jmzN94nc7hLkxCLE2EKpTKBSJh8OktsehG3XiKejLG9
      dcDSxmXiIV+/LZMMAEMxBnA1D0GvF5/uki+W+PSLW6efW12aXcHS6hrTUY18y4V2noPtBxRs
      L2YljW98mlIhS61Wp9OsU67kuH1nr88WSQaFoRBAPKDwq1//ioPDY5q2RsDvRVHUJxEcn99P
      MBSiVUqTKrYIhSMszM3g9QWIjUXxe72oqkq9VsMTiKCrIxv4kjzDyIdB/8G//hM5BhhhRl4A
      jbZJLw3guqcRC007uzMV4rQuun722Llt2z3FzeG0Dqqq9hTBeTyLs5cIzuPZoL3kEl62PUZe
      ADIR9jUyESaRjBgDIYBOKcfPfv4TfvqrTzCdb/sihGD3/gOsv+Koci6PfdYKSs4tA5EHcB2F
      jTfepnlyRCFzxPFJlrmVNfI7m9S7KtduXGBnaw9POEkyYJCqWMzNTBBPJinnClimSebwIVML
      c+RPsjRLeWoiwPqkh/uHRWLJBcZUC69fcPveLtNLl1mZG++32ZIBYCA8ANhsfvU5IjxJbn+b
      lmnRbDWJTCzwxvwkNctl/drbxAOgez04VpNAOMSDr+7g6n4AImEPDz6/hR4KUWp2ePhwH9N2
      uPrWu/gVm1ajSalYwnYM9vaP+myvZFAYCA/gCUZ574O/xlgwSD0iuLd9RCQcwYeKH5uYz0vA
      60GJx3G7NXRfmEAwCk6XqclxmsIkEpvAE2oxEwtTDPnxrqwQGhvH49GIx6I4AR8BnyBb6TCb
      mOq3yZIBYWijQN1GmXJXY3Zy7MxlyCjQ04xiFGggPMBZ8EfGmY30uxaSYWdoBfCq+NXtI9rm
      2eND4nQuM0oPT03Eo+m7PSTTXMdB7eGpe1qGi6oq0MtUZvfRdGi1v9OhHcd5KS80FAKwOg0a
      lsZ4QKHheIj4f3O1G40G4XCIZqtDOBx6avqzMNt0lCDBb3jG//IXd+RUiBFmQKJAv51GtcxX
      X93CbqTZy3fothrUm20s00I4Fh3DwrIsBJA/eUgmfUym1MJsN6nWm7iOTafTplM6JN1wMQyz
      3yZJBoSh8ACgc2EuzkGqhAj4+b//5+eUTB/ff2sDn9dLxlQZUywuX7nC0tICP/n1LX7vb37I
      lzc/w+dTiEQTHJYbvDHj5e69Twm+eYlZn7ffRkkGgKHwAACRiTna5TSO45CYX+UHH7zN5FSc
      vVydaVHE8U2iAHowxsrSLF5VoCgaHl3FdVXWLl8lHvYzMz1Jo9XpaQKc5PwwFGFQx7YQioZr
      tnG0AE6nRttSSMQjdLoWXlUgdB8+z+mgxzQMvD4f7UaVlqWQiAZxFA1dWFiKF9voEggGcOV0
      6JFnKATwunAch7sPCxjW2RdUfBURCxA4Tm/Tf1826vHbcF3nyYtGZy/DRYGeomLfZRRo5AUg
      E2FfIxNhI8i/+KNfUax3zl7A48dHL+uRCBCInpcS6XlV7Fdky1nKmIqF+Gd/+P0efvhsDLUA
      bn/6S5q2n9WlBTzxOOOBp1d6MNpNXM1PwKdTzmQIzczw7FoQR7maHAMMAB2jP5PVh1oAiifI
      +vIF3HqJTtDP1u49DE+Mlakwh5ki0fEYkZDK0dYtTjJN3g57+PLuDksb15lJhPtdfckAMDRh
      0BdhdttUq3UE0KoXIDBDWG2RPUmhT8yj2U0alTREL3BxeZpmrYbtmmxtH/S76pIBYagFMDW3
      zPr6Mn5/gLFognphl1zNIT6RIBmP4vUFCITjlA5uc1RogBCompdo2N/vqksGhKHuAi0snC6F
      GJubByD54Q+ePmDq9PuJ3/3db5yz9tQh0ZCPjjkI+8oIeh99Du/WUNFgf1bqk2FQGQZ9wiiG
      QYe6CySR9MrwCEAILMvmm/7KeQXbk0pGm6ERgNWt8+Mf/wzzGzf93p5c5FbSG0MzCK4XMlxa
      X+Cw0MHO3aVNBK/ocP/uPZIzCT7+9U3GL7xJoJ2ibtgsrF5k87PPmL/6NsFOiq/2C3z/gxt8
      9NEtrr3/odwlUgIMjQcQ7O0fksrnSe3voviivHPjCsI2qBsu3UaNuaVlGuUKgfg07737Jqoj
      WF1foVkt0DAVZseD1Doq62sL1Mpyl0jJKUPiAVzWb3yPeHyMSrmMqusowIWNa/hVm1pX4FY7
      XLm0RCSg4fH6SYx7OCxnmZlbJmCVybfjzCQi7JVSzK6s9tsgyYAgw6AyDPoEGQaVSEaMIekC
      vT7+60/uUm+d/SV5waNlUZTeXohxhUDtoQxXuI92quxlSrX7yIP0d5fIoF/nD3//2pnP/zb0
      RQCdcpqcGWQpGeb+5i6XL108XY/mJbHbFdpanOhflT0XLo4Lmqb8xjeufnnrUE6HHjDGI/7z
      LYB2scGxWSYZnmFz5yFrF+bZ339IYm4Fr1khVbFYXRhnbz/F0toa+YNt1Og0i5NBHmw9ZDLs
      sl0tsDQzScSvMhb0UjMVGrkjLF+c2ZiHnYMcMwmNj2+nubw+zYPNI97+3nvUs0dEZy6QjMvp
      0JK+dYEUxkJejg/TTMzOYnZb5LNpDgsGM8EOpp4gnz2hVGsza3XJZrKktzK0VyaYnF/B2zoh
      OJagXEhTci1uLE+yn3Vopo+ZWAxx67PPKbdNTLHB/MIiMzNxmg3BmN7iy5MyV8bn+mO2ZODo
      zyBYUUgmohyWTSaCGp1WHaEF8Okq0WiE/MkB+CMY9QKFYo6GoRLxewmGfTy4d5+m4ZIYTxDw
      +1DNJjc/v43lqkSDPk6OTghFxwhFJ0lOxahmDii3BLXCIcWGIKibnGQKfTFbMniMfBhULosy
      eIxH/Pynf/K3v5Mw6MgLoNo06KUFXOGe7hKpnj3uLRCnu0RqPVxw+1EeoIcIju08ygP0EI1y
      3Ed5gB7aA0UQC/nkqhDfBfGIXybCHjFoibDvApkIk4w0Q+wBDA4OSnjsKoG5i4wHelsVTTKa
      DLEABIcPbhNfucKGXeXjjx4wPreOWzumWG9zYeMKx1ubxOZXCTsVDootrm0sc/vONgsbV1ie
      jvfbAMkAMNRdoERyFqvdoFarYJoGu3tH4I3w9pvXsDoddE2hXq9SKldplLLkql10VdCo1ftd
      dcmAMMQeQGNqboGQ1qXQsvAFwkyMTxOPetE9PiIhl6pHxxMKE/BaJLQA8ZCfmq4SCof6XXnJ
      gDDyYVA5HfprBi0KJKdDSySvmSHuAr0aPrp3TMdw2FhIsJg8+57DkuHkfHkAx6BtfLtV3v7z
      n93m3/3PT7i1l3tNlZIMMudLAGaBk4KBaXSoN9s4jo3juHQNA9exsS2TWq2Gacv1hCSnnL8u
      kNvl1udb6IqNd2KOYMDLw+2HrCxM4AsG+elPf8bCle/zw3fW/uqyJOee8+UBABCgeQj6PQRj
      MVIPHrC4PM9x3aJbq3LjvXfRrB52hJGcK86XB/AlWZrWcOIq9a4gOREn8f77REJ+pqYcQl7I
      lxssL0T6XVPJgDDyeYBbezkM02F5JsZM4tsLQ+YBnmbY8gDnywOcgTfXpnvc4lQyzIy8AP7l
      f7tJqXb2MYF49G8vL6JA77s8vopdIoUQoPRmiXjUIr2UIk4r8520x9AIoJ7e5diKcnVhjI9u
      fsWb717BVYKEfKeuNpvNMj09Da5FrWkxFg2+VLkP0xX5SuQIMzQCcCyLYqlEI2hSqbfpthrY
      Pg+Fg/s0iGBVjzh4eMT1t65SbXSwGjl2DgqsXb9Edvs+emKRyaDL8dEJicXLMusrAYYqDKox
      5lM4KtaZmohjNhtUywWaWpQrawt4gzHeXomQqhhUqjWyVZNLy9PUqiUabYvdzS3ypRqXb1yn
      Xan02xjJgDA0AtB8fpaWJqm1VCZjITw+P+HoGHYlzd2tAyKxGF5/CL9XJxgMonQrfHHnAbbj
      4ggYG4vgD0fxe72EgnKXSMkp5zQM6nK4dZ9sw+H69asEfS/u6TmOwz/9j39BrtLDGOBx6/W4
      waMAehnDPhq/9sYrsmUQynjZ9jinAng55PsATzOKeYCh6QJJJK+DoRGA67qIb/z/8ogznCMZ
      FYZGAMe7ezRqOe7tnbzw+0omQ/eF3wge7u5LAUheyNDkAax2mV9/mef3f/ABX938GUdFkzff
      W+fw3jFqNIzIpxALG8zqLjMrS6TTKaqZDGp8lqDT4sHmfQKawtj8MsV0jo215X6bJBkAhsYD
      eILjXL2QIJXNk69abKzM46Jz+ca7zMSiLK2t8sbVDWzTwOg0aLbqaJEF3ri4hG22abQc5i4s
      sfnxTYLxiX6bIxkQhiYK9Cqq2a3leJBqcuPKKqqiyCjQM4xiFGhoukC9TvQCCMSmeSv2Cioj
      OTcMTRdIInkdDI0HeF38o3//Z2TlbNCRZagFYLfq5Do2RqlILKbT9c+gG22mphLPHduul3E8
      USKBp002TJuuaX9XVZYMGEMtAOE6mJaN0elihzyYHgerZbB151OK5Tarb7xJauc+BMZZSYZw
      bJfbn20xv36FJbk6tIRzNwZwqNWa4Anz4fV5Dk8KxGc3CChdGrUKHVtBQdBoNPpdUcmAMNQe
      QPV4CQc1/ONx/EEdzetBG4/i9YHq11iYC5DfvwfBBGPxII6uoesqfr+cDi05ZWjyAK8Dx3H4
      N//jY0r1HtYJemXToXt8B9YVKOoreC8Zpe9Tmb/L9hh5AchE2NeMYiLsnI0BJJJvR98EIFyb
      bOqYUq35W/fpdc0u5jfWshWORSZ1Qq314rmfj+m02z3t/ysZDfo2CC6k9ik0VSJug1jYj2la
      +Pw+XAdUXDrlDHnCTHbz5COLzIc9eD06x7sPaOsRtK6BqQtcNLweHce2UTQNyzDw+Pzs724z
      v7iA4gnj1wSuouL1qHS7Jl6fH12Tzk/SRwHExqc4OLkH2gIPbn1G21GITI5hVAPEqVL3GGTq
      GuFJL/vbm2RUjd957wZ1S+XqxWUU4OOf/C/upRz+1u/d4OCkxFhAo+sI8EQIAvV6CcVj8eW9
      TVTdz9Vrc/zpn/6Uxas/4Advr/bLdMkA0bfHoGU7TM8v0m2UsYTKZCKOY7l0miXS+RJT0zOM
      xxN4dA+Xrr/NZCwAQNTjsr1/SKGcxvFMs5YI01E8XLl+Hb9HY2JyEsX9RmZXUVhcu8zqbIJM
      ocKNd99BMdt9sloyaPQtCmSbHTKZPOHxKUKaTbZUZ2Z2llohhSV8TCbj5DM5YrEYeiCEY3YI
      +AOnY4B0hmB8ErtZxsZHbDyCrnnQsDk5yTCenEVxTTRNRVF0XCFQXQdUl2yhSmwsTjQSlFGg
      ZxjFKJAMg0oBPGEUBSBHgpKRZqinQrwK/m2vmWBe3crMg7A6dO9lnP7f6/tL31V7nDsBVHNH
      bO6lSC6tk/A5+OJJ/Bo0Gw2CkchzLm/rqChXhx5hzl0X6ChT4t3336NROKFWzPL5559yUqhT
      KlewWhU++fhj8lUZBZKccu4EgKqhP5r16SoaG5eu0KgWqFSrbG3v88bbb3H8cKfftZQMCOdO
      AImQyq9++WtsPUo4HCHo9xIMBPD7/cwkonz68cf4o3JZFMkp524MMLd6jblnkryh+dknf08u
      rj/1ndej4fWcPWQnGW5kHkDmAZ4g8wASyYghBSAZaQZSALnNL/j57W1K2T2Oss3ffrBw2N7d
      +24qJjl3DOQgWNXCRBWTaltH99T56Z/fRIlOsTgRJqJ3ybsTBESXldXTadEIOHjwJQ8Osly9
      co2HxyfMT8fZ3jlm/fqbdLPbHJdNlmeTJFdWKaWzrK0u9dtMyQAwkB4AYGllkYP9A+xqmhoR
      EuEgHmFz3NIQzROE6gMhcByTdsfg+DjN9OwsqttlYmGD5fl5ZqcT1IoFUrky01MTTM5Ns/nx
      TXxjzy+cJRlNBtIDhKemUL1Rrl26iC8+y2X3NpbHy/ziOG7JIkIDT2IaYRvcvXOPxYtv4Jkd
      495uiuDiEiFPAFQH27SYurDK/LiXg1wLXVVR/SGm4qF+mygZEEYqDGp3m7RsnbHw6bpAMgz6
      NKMYBh1ID/C60P1h5P7wkm8ysGMAieS7YGgFUK/VcJ/7tEut1n0lu8lIRoOh7QIVczk8XpV8
      rkgoNkXEa3OU2sUU84TKBvGol2LdYmFhmnI2jaEEmE0EOTjKML2wTCRw9v625PwwtAIAqOcP
      aThxKqljPHabiZko5apLvdbEbbX48t4Rrud9apkqAbVC1TvO1tZdUhWH3/3gUr+rLxkAhrYL
      BKDqXpLT0wS9HoTV4eg4zemCKA6VWofk5DiO45CYTBKPBCmVyownZ9GF1eeaSwaFoQ2DCtd9
      tAKxghCg4OK4AlXVOF1eWOAKUDX1UbZYgAKO4z4J9ckw6NPIMOgQoXzjIp1ecw39yUenN8FT
      l/HRjaHrQ+30JK8YeTdIRpqh9QCvin/8H35MrtLLqhC97wjxz//+32A2Iadn9IOBFsD+5hfc
      20lz4fINrq0vvJbfaHdNmh3ztZT9srjDOQw7Fwy0AFYuv0HT8HJtbZa9+7codnXW5yNs7aYI
      T84TtErkK3WWr7xN7XiHhhJiOa6yk6pyeXWRze1dFtevYleOKTRdLq7Ms7W9TWJulZW5yX6b
      JxkAhmMM0C1ze+eETrVKzTRZu3IDr2tiqX7eee8StYd73D/M0yhXsAHHNml3TYRwqVcq3N/c
      pN1qsHPnNuWORblS7bdFkgFhoD0AKMTiMfDH2ViYpGH7iISiBPwenLEo4KDrAcZnF1lx2pha
      GF3T0VUdj9eDrmr4QyFWL1ygYuqsLCfpbO4TCYf7bZhkQBjaPMCrwHEc/tV//4hS/bdvt/Tb
      EKdbGvYUf/+Hf+8DJsf8Mg/wCLk8+neETIQ9zSgKYDjGABLJa2LgBSCEoJzPUKo2ARvDOJ3t
      0+12cL/huwzD6E8FJUPNwAugntplv9gktXuXQrPC4WEVx3E42NvCtF1Mw8BxXA4OH2IYBq4Q
      2JaJZdu4roNpGliWhWlaCNfBMAwcd2R7fZJnGPAoEBxXTd65dpV2PUi2UONkL43wrCIAo1Xk
      L/7kzwgv32BCKXM7f0xk7hrF9D62pbC8NMbRcY2O2SHk8bFxaYEf//nPWLr2Q77/1kq/TZMM
      AAMvgLmozq2dQ7zNHInVZcKROpZpowHtapmFK2/RaHaIJGfZmA9yd7+LP5pAbzcQHh/Xrt+g
      WCkQV01SuRo33n2HSlVuiCE5ZeCjQEII8qkjhD/G9ESITkdgWx1UTcXr0Uinc0TiEwS8GgGv
      SsfWaVcymFqIibEAqB5s20JH4AqHdL5CPD5OLBqSUaBnGMUo0MAL4HUiBfA0oyiAgR8ESySv
      EykAyUgzlAIQjsXt23dwXJOTk/xLnVPN55GZAsmzDHwU6EUI18WoZTkqJqkXq0S8BjupGmsL
      SbSxCcx6GadV5qDY4Y3rV0jt3OXguMbbv6Px5Z0dVq7cYGos0G8zJAPAUAoAIL6wRjO1jyXG
      +PKrW6AHqU5GaOZ20DxePFaTWjbLw6gGvnkuLgdoNxrYbpfN+3tMfXit3yZIBoCh7AKBgtfj
      Y3FuimbXJjmZQPeHCUWncFpFJqYn6XYN/IEQvkCU4uFdDrJVLKOLovkI+uWiWJJTZBhUhkGf
      IMOgEsmIIQUgGWmkACQjzQAIwOGTX/6Emzc/otq2X/C9IJfLg9NlZ//4649rR/zxj3/BL37+
      S6rG1wul5453qD8T8LfqZcoduR6o5HkGIAyq4PXoqME4WrfALz7fwxtOkAzB9NwsJ+kMd+5s
      cvmNG5SODzg5OeCtd75HDMHFGx+wEi2ztXfCVnGPtjfOpWkfxw93mJqKs3fvPqbiY9JvstvQ
      +eDSHLfubDK7doOrK9P9NlwyAAyABxCsXn2X5bjNV3dOWLv+Frrbweh2MTpNmo6fy5cusbE8
      w9TiGtcuL+Ma9pNzi+kCusfG9oYoFnI4ZpdsvoyfNvrkOmsJDV9igSvX38Bo1ImPR8mmsn21
      WDI4DIAAFPJH2xyUNT748DrF/fskZhaZTibYPciRnBxnPKyzc1RkMhEnFIoRDHrAH6e09yUV
      Mc76yhwRr8blSxeJTy/z4XvXabthEuQpqhMsz09RO9omEEvgqgE2Vuf6bbRkQJB5AJkHeILM
      A0gkI8YADIL7yx/f3KbRy+K4QpzuvaF+uydvwOvh7/71y2f/XckrYeAEUMyc4B+fxu02CIRj
      eLTffGMd7O0xv7KKUc1Ss0PMTka+9e/96V/ukCl/9+8IxyN+KYABYOAEUMllqFUMYlqbqcUQ
      hUKa4PgUXlXFNTt4IxFswyEY9JE53MI3Pkvj4SZl7wZjXoNS0yE5HgaPH9voUMiXmUnGyBRq
      zExPkElnmZxdIOQbONMlfWDg7gJPcIwxp0mlA56TB3z0xQ7RqTkWkxG8ZhnTN4c/GmEtOEl8
      YpJqMQeaD59icPMXn1BuCz784Yec7H7Jxo0b1Ks16pUCE7ML7GxuEp2cYnNzm3ffvNJvUyUD
      wAAOghUW19Y42d9H8/iZnp1lZXGesNOhM7ZCNbNDYiwGgOaPYuW3CUwuoaAQiSdYW1vDg000
      FqXeaAIKHtUlk82hayqZdBpFl9OhJacMnAdYXFtFURT+4O/8AZqmMTWzhKLpaOoMAgWxkETT
      Tqu9uraOWFlF1TQWpgW489iOQNc1pqfncV0XpqdQFLAsB49HPw0Xerx9tlIyKIx8HiBVbGA7
      Z28CIVyEeLw968ujaSpLybFHZcg8wDeR26R+h8xPRvueCJP0jwEcA5wN0zRf+LcQDpb1olmm
      Esk58gCVSoVkMvnc365jUquZTEyMvfA8x3FOxwpnRAjxpAvTzzJc133S/eilDCFET+3x+Nxe
      etavqj1e5vyRHwO8irlAQoie+rxCCBzH6akbZds2mqb1NAZ4Ve0B9L1Nbdt+qfY8Nx7gLCiK
      0tMN87iMV0EvN8yrOB9eTXs8Lqef58PLt8dIewCJ5NwMgs+KEC6lXJpKo4PZrlNvGyBcCsXS
      s0fSadZodk6/L+bSVJtdHKvLyfEJliOoVYqYjsCxupSr9Rf9Gs1qkZNMHsd1qRQylOttXMci
      dXxM13JpVIoYtsB1LErlKs8+nYRjkjo+pFhtIlyb9MkxHdPBbNdJPSq3VC7jCoHZrlNrvXhB
      SNc2KVVqIByyqROaXQur2ySVzmK7gkq5iOMK7G6TSqPzwjKKmWMOjtI4wqWQSVFvG9hmh5OT
      FJYrqJaLWK7AMTuUa80XltFt1ThKZU/r/eg6uLZB6vgE0xHUH7epbZzW99nzm1UODg44TuWw
      7UftaLt0m1VSuSKu61AsVxBC0G3Wnpv4qP3oRz/60QtrNiIYjSxbR1XK2TRqp8GDSpOZkMb/
      /slHXL+y8fWBrsXxQZpap4vXbXGQqVHMZmjVSjiqIJ1vUjy5j6WNY9eP+OJ+nrULs0//mGOR
      yuZpl0q0MUmlylQLGVqNKoYC6WyFZmmfmhHEZ+f45edHXFxb4JsdAsdoUWkanOwfYBk1Wo5C
      Op2jlM/hdht0hM7tzz8juXiB/fufUWzAzFT8ObvTB9vc2jkmqnQptC0ymTz1UhbbMqgZKrt3
      PiY0uUju6B6HmQ4Lc5NPFyC63Lu7TywxjtMukSo2yWVztCp5bOFSqBqk926hBqdoFva4t1fh
      wuLTr6EKp8OXX20SGYuh2U32UxXK+TTNegVLgXSuTjm7RVfEoHXCJ3fTrK88/TKTa1t0TYvD
      wxNEp0oHhUwmTyGbw2lVsDQPn3/yBfNrqzz4/CZ1x08yEX1y/sh7AKddY+rCJeYmAnQcP0Hd
      IZfLk5h65p1h1cvi0gIeDQyzy9ziGhNxPw3Xy9rKBrpoE44n6TZKVBoWk7EXrD2qeZmeiCOC
      IaK6w+T8OnPJMLmOxqXVdXyqiTechG6JTKnD7NTzs1t1f4huJYvrD9JxdC6vreFXO/iik1xc
      maPZNlhcnCB1lMLxRPG9oDvtdCrUnDDJWICGLVi/sEbQ66IGomysLmKaXZIzU5RyOQz8hPQX
      3CauTbfb5uAwRdO0WFpeIxb2YGoB1ldXwekQn5iiUSnS6LrEQ89n351Wg0anyeHDAyrNBjOL
      ayQTQaqWh43VDTx0CI4lMVtFijWD5HjouTK8wQhxr830hUt08XJxdR2vqBOIT3N5dYZq02Tl
      wgSH+0e43jjeZ9pj5AWgBccoPHxAutQl6IVkLMR2tsNk9JkL5toU8jmKhQKoXuT6db4AAAJU
      SURBVNJHe5SqXcKqye7DXRwlgKL58IgqthZFf8GNJ+wOt+/vEA2H0bwhiie7pPNNpgI2W3u7
      mK4XFJWwz6Rl+/G+4Op0GjVCE3N4jQY6Ng/29jBEAKNeYPthmnDQhxacopnbI5ZIvNDmVqNB
      KXfE1vYOru2ye7BH21RxOw129o/xev2ovhhm/YRANM6LxqSOBQurFwg6HVxV5+hwj1rTwut0
      2N3fBy2A4gmhmAUUX5wXzWrXAiHGYxMkwxptx0P2eI98qUNMt9jZ38UigKJ68KtNDCWM50Vt
      KhwOC22WkhFCmKftqETpVLI82M8SC3vRQjNUj7eYmH6+PUZ+ECyESymfQQuNE9ZA8em0mha6
      BqFQ8OsDHYuTVBrLcUnOLtCu5NDDCSI+SGeKTM/PYZtdNGFja0GwTIKhp72AcGwy6RMMG6Zm
      5zBqBfDHiIU8pNNZJmbmELaBR3ExhBfFsQiEgk93gawu6XQWfzTBxFiAdCrNeHIO1W5SqBnM
      JicwLAthGej+ILZpEwz6X2h7u9UiGPSTSaWJTEzjwyBXajIzk8Q0uyiOheIL4RjP2/J4HGTr
      YZKJKIVsGv/YJEHdJZsrMz03i2V20VwLxxNGmMbzZQDteplyy2Y2OUGlkEENjjMWUEmn80zN
      zeNYXXThYKl+sE2C37wmnAqg3bUIBfy4jkk6nWNyZg7RrVNq2sxMxTEs53QqvT+I7QgC/q8f
      biMvAMloM/JdIMloIwUgGWmkACQjjRSAZKSRApCMNFIAkpFGCkAy0kgBSEYaKQDJSCMFIBlp
      /j+cIQOtGPXO/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='24' name='Total cases' width='104'>
      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
    </thumbnail>
    <thumbnail height='192' name='Us Covid-19 dashboard' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
